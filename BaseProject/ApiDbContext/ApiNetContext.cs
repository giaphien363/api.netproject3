// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using BaseProject.Models;

#nullable disable

namespace BaseProject.ApiDbContext
{
    public partial class ApiNetContext : DbContext
    {
        public ApiNetContext()
        {
        }

        public ApiNetContext(DbContextOptions<ApiNetContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<UserAdmin> UserAdmins { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.ToTable("employees");

                entity.HasIndex(e => e.Username, "UQ__employee__F3DBC572E1A8F317")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Address)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("address");

                entity.Property(e => e.City)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.Contact)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("contact");

                entity.Property(e => e.Country)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("country");

                entity.Property(e => e.Designation)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("designation");

                entity.Property(e => e.Firstname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("firstname");

                entity.Property(e => e.Joindate)
                    .HasColumnType("datetime")
                    .HasColumnName("joindate");

                entity.Property(e => e.Lastname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lastname");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Salary)
                    .HasColumnType("decimal(12, 2)")
                    .HasColumnName("salary");

                entity.Property(e => e.State)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("state");

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<UserAdmin>(entity =>
            {
                entity.ToTable("userAdmin");

                entity.HasIndex(e => e.Username, "UQ__userAdmi__F3DBC572ADB3BCAF")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}